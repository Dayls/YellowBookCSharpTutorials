using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class LevelLoader : MonoBehaviour
{
    public int levelToLoad;
    private string LoadPrompt;
    private int completedLevel;
    private bool canLoadLevel;
    private bool inRange;
    public GameObject padLock;
    //private float mass = 6;
    public GameObject instance;
    public Rigidbody kinematic;

    public float time = 5.0f;

    void Start()
    {
        //padLock.AddComponent<Rigidbody>();

        //kinematic.isKinematic = true;
        completedLevel = PlayerPrefs.GetInt("Level Completed");

        // if level to load is less that completed level, than can load level 
        // equals to "false", and if not, than "true"
        // For loading the last completed level
        canLoadLevel = levelToLoad <= completedLevel ? true : false;

        if(!canLoadLevel)
        {
            // Quaternion.identity means that rotation is reamains the same
            instance = Instantiate(padLock, new Vector3 (transform.position.x, 2f, transform.position.z + 1.7f), Quaternion.Euler(0, 90, 0));
            instance.tag = "locktag";
        }
        kinematic = instance.gameObject.GetComponent<Rigidbody>();
    }

    // setting kinematic on initiated lock rigidbody
    void FixedUpdate()
    {
        time -= Time.fixedDeltaTime;
        if (time <= 0.0f)
        {
            time = 0;
            kinematic.isKinematic = true;
            kinematic.WakeUp();
            //enabled = false;
        }
    }

    void Update()
    {
        if (canLoadLevel && Input.GetButtonDown("Action") && inRange)
        {
            SceneManager.LoadSceneAsync("Level " + levelToLoad.ToString());
        }
        if(instance.tag == "locktag" && instance.GetComponent<BoxCollider>() == null)
        {

            instance.gameObject.AddComponent<BoxCollider>();
            BoxCollider Collider = instance.GetComponent<BoxCollider>();
            Collider.size = new Vector3(0.7f, 1.8f, 1.2f);
            Collider.center = new Vector3(0f, 0.5f, 0f);
        }
        if (instance.tag == "locktag" && instance.GetComponent<Rigidbody>() == null)
        {
            instance.gameObject.AddComponent<Rigidbody>();
        }
    }

    void OnTriggerStay(Collider other)
    {
        inRange = true;
        if(canLoadLevel)
        {
            LoadPrompt = "Press E to load level " + levelToLoad.ToString();
        }
        else
        {
            LoadPrompt = "Level " + levelToLoad.ToString() + " is locked";
        }

    }

    void OnTriggerExit(Collider other)
    {
        inRange = false;
        canLoadLevel = false;
        LoadPrompt = "";
    }

    void OnGUI()
    {
        GUI.Label(new Rect(30, 9, 200, 400), LoadPrompt);
    }


}

